"use strict";
// Model.
var Entity = gf.Entity;
var EntityBuilder = gf.EntityBuilder;
var EntityGenerator = gf.EntityGenerator;
var EntityPropertyFromValue = gf.EntityPropertyFromValue;
var LoadableProperty = gf.LoadableProperty;
var NamableProperty = gf.NamableProperty;
var Playable = gf.Playable;
var Relatable = gf.Relatable;
var Selectable = gf.Selectable;
var Selector = gf.Selector;
var Trigger = gf.Trigger;
var Triggerable = gf.Triggerable;
var Universe = gf.Universe;
var UniverseWorldPlaceEntities = gf.UniverseWorldPlaceEntities;
var VenueWorld = gf.VenueWorld;
var World = gf.World;
var WorldCreator = gf.WorldCreator;
var WorldDefn = gf.WorldDefn;
// Model - Actors.
var Action = gf.Action;
var Activity = gf.Activity;
var ActivityDefn = gf.ActivityDefn;
var Actor = gf.Actor;
// Model - Combat.
var Armor = gf.Armor;
var Damage = gf.Damage;
var DamageType = gf.DamageType;
var Damager = gf.Damager;
var Killable = gf.Killable;
var ProjectileGeneration = gf.ProjectileGeneration;
var ProjectileGenerator = gf.ProjectileGenerator;
var Weapon = gf.Weapon;
// Model - Effects.
var Effect = gf.Effect;
var Effectable = gf.Effectable;
// Model - Items.
var Item = gf.Item;
var ItemBarterer = gf.ItemBarterer;
var ItemCategory = gf.ItemCategory;
var ItemContainer = gf.ItemContainer;
var ItemDefn = gf.ItemDefn;
var ItemHolder = gf.ItemHolder;
var ItemStore = gf.ItemStore;
// Model - Items - Crafting.
var CraftingRecipe = gf.CraftingRecipe;
var ItemCrafter = gf.ItemCrafter;
// Model - Items - Equipment.
var EquipmentSocket = gf.EquipmentSocket;
var EquipmentSocketDefn = gf.EquipmentSocketDefn;
var EquipmentSocketDefnGroup = gf.EquipmentSocketDefnGroup;
var EquipmentSocketGroup = gf.EquipmentSocketGroup;
var EquipmentUser = gf.EquipmentUser;
var Equippable = gf.Equippable;
// Model - Journal.
var Journal = gf.Journal;
var JournalEntry = gf.JournalEntry;
var JournalKeeper = gf.JournalKeeper;
// Model - Maps.
var Terrain = gf.Terrain;
// Model - Mortality.
var Ephemeral = gf.Ephemeral;
var Phase = gf.Phase;
var Phased = gf.Phased;
var Starvable = gf.Starvable;
var Tirable = gf.Tirable;
// Model - Perception.
var Perceptible = gf.Perceptible;
var Perceptor = gf.Perceptor;
// Model - Physics.
var Boundable = gf.Boundable;
var Collidable = gf.Collidable;
var Constrainable = gf.Constrainable;
var ForceField = gf.ForceField;
var Locatable = gf.Locatable;
var Movable = gf.Movable;
var Obstacle = gf.Obstacle;
var Portal = gf.Portal;
var Traversable = gf.Traversable;
var Vehicle = gf.Vehicle;
var PlaceBase = gf.PlaceBase;
var PlaceDefn = gf.PlaceDefn;
var PlaceZoned = gf.PlaceZoned;
var Zone = gf.Zone;
// Model - Skills.
var Skill = gf.Skill;
var SkillLearner = gf.SkillLearner;
// Model - Statistics.
var Leaderboard = gf.Leaderboard;
var Scorable = gf.Scorable;
var StatsKeeper = gf.StatsKeeper;
// Model - Talk.
var ConversationDefn = gf.ConversationDefn;
var ConversationRun = gf.ConversationRun;
var ConversationScope = gf.ConversationScope;
var TalkNode = gf.TalkNode;
var TalkNodeDefn = gf.TalkNodeDefn;
var Talker = gf.Talker;
var WordBubble = gf.WordBubble;
// Model - Routable.
var Routable = gf.Routable;
var Route = gf.Route;
var RouteNode = gf.RouteNode;
// Model - Time.
var Idleable = gf.Idleable;
var Recurrent = gf.Recurrent;
// Model - Usables.
var Device = gf.Device;
var Usable = gf.Usable;
